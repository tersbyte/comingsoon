{"version":3,"sources":["components/header.js","App.js","index.js"],"names":["Header","className","softShadows","SpinningMesh","position","color","speed","args","mesh","useRef","useFrame","current","rotation","x","y","useState","expand","setExpand","props","useSpring","scale","ref","onClick","castShadow","attach","factor","App","colorManagement","shadowMap","camera","fov","intensity","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","Math","PI","receiveShadow","opacity","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAiBeA,EAdA,WACb,OACE,4BAAQC,UAAU,SAChB,yBAAKA,UAAU,+DACb,0BAAMA,UAAU,OAAhB,yBACA,wBAAIA,UAAU,OAAd,eACA,0BAAMA,UAAU,eAAhB,2D,gBCIRC,cAGA,IAAMC,EAAe,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAExCC,EAAOC,mBAGbC,aAAS,kBAAOF,EAAKG,QAAQC,SAASC,EAAIL,EAAKG,QAAQC,SAASE,GAAK,OALZ,MAQ7BC,oBAAS,GARoB,mBAQlDC,EARkD,KAQ1CC,EAR0C,KAUnDC,EAAQC,YAAU,CACtBC,MAAOJ,EAAS,CAAC,IAAK,IAAK,KAAO,CAAC,EAAG,EAAG,KAE3C,OACE,kBAAC,IAAER,KAAH,CACEJ,SAAUA,EACViB,IAAKb,EACLc,QAAS,kBAAML,GAAWD,IAC1BI,MAAOF,EAAME,MACbG,YAAU,GAEV,uCAAmBC,OAAO,WAAWjB,KAAMA,IAC3C,kBAAC,IAAD,CACEF,MAAOA,EACPC,MAAOA,EACPkB,OAAO,WACPC,OAAQ,OA0EDC,EA1DH,WACV,OACE,oCACE,kBAAC,EAAD,MAEA,kBAAC,IAAD,CACEC,iBAAe,EACfC,WAAS,EACTC,OAAQ,CAAEzB,SAAU,EAAE,EAAG,EAAG,GAAI0B,IAAK,KAGrC,kCAAcC,UAAW,KAEzB,sCACER,YAAU,EACVnB,SAAU,CAAC,EAAG,GAAI,GAClB2B,UAAW,IACXC,uBAAsB,KACtBC,wBAAuB,KACvBC,oBAAmB,GACnBC,sBAAqB,GACrBC,sBAAqB,GACrBC,oBAAmB,GACnBC,wBAAuB,KAGzB,gCAAYlC,SAAU,EAAE,GAAI,GAAI,IAAK2B,UAAW,KAChD,gCAAY3B,SAAU,CAAC,GAAI,GAAI,GAAI2B,UAAW,MAC9C,+BAEE,0BACEnB,SAAU,EAAE2B,KAAKC,GAAK,EAAG,EAAG,GAC5BpC,SAAU,CAAC,GAAI,EAAG,GAClBqC,eAAa,GAEb,yCAAqBjB,OAAO,WAAWjB,KAAM,CAAC,IAAK,OACnD,oCAAgBiB,OAAO,WAAWkB,QAAS,MAE7C,kBAAC,EAAD,CACEtC,SAAU,CAAC,GAAI,EAAG,GAClBC,MAAM,YACNE,KAAM,CAAC,EAAG,EAAG,GACbD,MAAO,KAET,kBAAC,EAAD,CAAcF,SAAU,EAAE,EAAG,GAAI,GAAIC,MAAM,OAAOC,MAAO,IACzD,kBAAC,EAAD,CAAcF,SAAU,CAAC,EAAG,GAAI,GAAIC,MAAM,OAAOC,MAAO,IACxD,kBAAC,EAAD,CAAcF,SAAU,CAAC,EAAG,GAAI,GAAIC,MAAM,UAAUC,MAAO,IAC3D,kBAAC,EAAD,CAAcF,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAM,UAAUC,MAAO,KAI5D,kBAAC,IAAD,SCxGRqC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.dbe1587f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nconst Header = () => {\n  return (\n    <header className=\"show \">  \n      <div className=\"d-flex flex-column justify-content-around flex-wrap-reverse\">\n        <span className=\"box\" >Tersbyte Technologies</span>\n        <h1 className=\"box\">COMING SOON</h1>\n        <span className=\"details row\">\n          Until then, ping us on : tersbyte.official@gmail.com\n        </span>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useRef, useState } from \"react\";\n//R3F\nimport { Canvas, useFrame } from \"react-three-fiber\";\n// Deai - R3F\nimport { softShadows, MeshWobbleMaterial, OrbitControls } from \"drei\";\n//Components\nimport Header from \"./components/header\";\n// Styles\nimport \"./App.scss\";\n// React Spring\nimport { useSpring, a } from \"react-spring/three\";\n\n// soft Shadows\nsoftShadows();\n\n\nconst SpinningMesh = ({ position, color, speed, args }) => {\n  //ref to target the mesh\n  const mesh = useRef();\n\n  //useFrame allows us to re-render/update rotation on each frame\n  useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01));\n\n  //Basic expand state\n  const [expand, setExpand] = useState(false);\n  // React spring expand animation\n  const props = useSpring({\n    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1],\n  });\n  return (\n    <a.mesh\n      position={position}\n      ref={mesh}\n      onClick={() => setExpand(!expand)}\n      scale={props.scale}\n      castShadow\n    >\n      <boxBufferGeometry attach=\"geometry\" args={args} />\n      <MeshWobbleMaterial\n        color={color}\n        speed={speed}\n        attach=\"material\"\n        factor={0.6}\n      />\n    </a.mesh>\n\n    //Using Drei box if you want\n    // <Box {...props} ref={mesh} castShadow>\n    //   <MeshWobbleMaterial\n    //     {...props}\n    //     attach='material'\n    //     factor={0.6}\n    //     Speed={1}\n    //   />\n    // </Box>\n  );\n};\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      {/* Our Scene & Camera is already built into our canvas */}\n      <Canvas\n        colorManagement\n        shadowMap\n        camera={{ position: [-5, 2, 8], fov: 60 }}\n      >\n        {/* This light makes things look pretty */}\n        <ambientLight intensity={0.5} />\n        {/* Our main source of light, also casting our shadow */}\n        <directionalLight\n          castShadow\n          position={[0, 10, 0]}\n          intensity={1.5}\n          shadow-mapSize-width={1024}\n          shadow-mapSize-height={1024}\n          shadow-camera-far={50}\n          shadow-camera-left={-10}\n          shadow-camera-right={10}\n          shadow-camera-top={10}\n          shadow-camera-bottom={-10}\n        />\n        {/* A light to help illumnate the spinning boxes */}\n        <pointLight position={[-10, 0, -20]} intensity={0.5} />\n        <pointLight position={[0, -10, 0]} intensity={1.5} />\n        <group>\n          {/* This mesh is the plane (The floor) */}\n          <mesh\n            rotation={[-Math.PI / 2, 0, 0]}\n            position={[0, -3, 0]}\n            receiveShadow\n          >\n            <planeBufferGeometry attach=\"geometry\" args={[100, 100]} />\n            <shadowMaterial attach=\"material\" opacity={0.3} />\n          </mesh>\n          <SpinningMesh\n            position={[0, -1, 0]}\n            color=\"lightblue\"\n            args={[3, 2, 1]}\n            speed={0.1}\n          />\n          <SpinningMesh position={[-2, 1, -5]} color=\"teal\" speed={6} />\n          <SpinningMesh position={[5, 1, -2]} color=\"cyan\" speed={6} />\n          <SpinningMesh position={[7, 3, -2]} color=\"#E9967A\" speed={6} />\n          <SpinningMesh position={[4, 1, 2]} color=\"#FA8072\" speed={6} />\n\n        </group>\n        {/* Allows us to move the canvas around for different prespectives */}\n        <OrbitControls />\n\n      </Canvas>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}